// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: keepaway.proto

#ifndef PROTOBUF_keepaway_2eproto__INCLUDED
#define PROTOBUF_keepaway_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace keepaway {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_keepaway_2eproto();
void protobuf_AssignDesc_keepaway_2eproto();
void protobuf_ShutdownFile_keepaway_2eproto();

class StepIn;
class StepOut;

// ===================================================================

class StepIn : public ::google::protobuf::Message {
 public:
  StepIn();
  virtual ~StepIn();

  StepIn(const StepIn& from);

  inline StepIn& operator=(const StepIn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StepIn& default_instance();

  void Swap(StepIn* other);

  // implements Message ----------------------------------------------

  StepIn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StepIn& from);
  void MergeFrom(const StepIn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double reward = 1;
  inline bool has_reward() const;
  inline void clear_reward();
  static const int kRewardFieldNumber = 1;
  inline double reward() const;
  inline void set_reward(double value);

  // repeated double state = 2 [packed = true];
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline double state(int index) const;
  inline void set_state(int index, double value);
  inline void add_state(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      state() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_state();

  // required bool episode_end = 3;
  inline bool has_episode_end() const;
  inline void clear_episode_end();
  static const int kEpisodeEndFieldNumber = 3;
  inline bool episode_end() const;
  inline void set_episode_end(bool value);

  // required int32 player_pid = 4;
  inline bool has_player_pid() const;
  inline void clear_player_pid();
  static const int kPlayerPidFieldNumber = 4;
  inline ::google::protobuf::int32 player_pid() const;
  inline void set_player_pid(::google::protobuf::int32 value);

  // required double current_time = 5;
  inline bool has_current_time() const;
  inline void clear_current_time();
  static const int kCurrentTimeFieldNumber = 5;
  inline double current_time() const;
  inline void set_current_time(double value);

  // @@protoc_insertion_point(class_scope:keepaway.StepIn)
 private:
  inline void set_has_reward();
  inline void clear_has_reward();
  inline void set_has_episode_end();
  inline void clear_has_episode_end();
  inline void set_has_player_pid();
  inline void clear_has_player_pid();
  inline void set_has_current_time();
  inline void clear_has_current_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double reward_;
  ::google::protobuf::RepeatedField< double > state_;
  mutable int _state_cached_byte_size_;
  bool episode_end_;
  ::google::protobuf::int32 player_pid_;
  double current_time_;
  friend void  protobuf_AddDesc_keepaway_2eproto();
  friend void protobuf_AssignDesc_keepaway_2eproto();
  friend void protobuf_ShutdownFile_keepaway_2eproto();

  void InitAsDefaultInstance();
  static StepIn* default_instance_;
};
// -------------------------------------------------------------------

class StepOut : public ::google::protobuf::Message {
 public:
  StepOut();
  virtual ~StepOut();

  StepOut(const StepOut& from);

  inline StepOut& operator=(const StepOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StepOut& default_instance();

  void Swap(StepOut* other);

  // implements Message ----------------------------------------------

  StepOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StepOut& from);
  void MergeFrom(const StepOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline ::google::protobuf::int32 action() const;
  inline void set_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:keepaway.StepOut)
 private:
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 action_;
  friend void  protobuf_AddDesc_keepaway_2eproto();
  friend void protobuf_AssignDesc_keepaway_2eproto();
  friend void protobuf_ShutdownFile_keepaway_2eproto();

  void InitAsDefaultInstance();
  static StepOut* default_instance_;
};
// ===================================================================


// ===================================================================

// StepIn

// required double reward = 1;
inline bool StepIn::has_reward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StepIn::set_has_reward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StepIn::clear_has_reward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StepIn::clear_reward() {
  reward_ = 0;
  clear_has_reward();
}
inline double StepIn::reward() const {
  // @@protoc_insertion_point(field_get:keepaway.StepIn.reward)
  return reward_;
}
inline void StepIn::set_reward(double value) {
  set_has_reward();
  reward_ = value;
  // @@protoc_insertion_point(field_set:keepaway.StepIn.reward)
}

// repeated double state = 2 [packed = true];
inline int StepIn::state_size() const {
  return state_.size();
}
inline void StepIn::clear_state() {
  state_.Clear();
}
inline double StepIn::state(int index) const {
  // @@protoc_insertion_point(field_get:keepaway.StepIn.state)
  return state_.Get(index);
}
inline void StepIn::set_state(int index, double value) {
  state_.Set(index, value);
  // @@protoc_insertion_point(field_set:keepaway.StepIn.state)
}
inline void StepIn::add_state(double value) {
  state_.Add(value);
  // @@protoc_insertion_point(field_add:keepaway.StepIn.state)
}
inline const ::google::protobuf::RepeatedField< double >&
StepIn::state() const {
  // @@protoc_insertion_point(field_list:keepaway.StepIn.state)
  return state_;
}
inline ::google::protobuf::RepeatedField< double >*
StepIn::mutable_state() {
  // @@protoc_insertion_point(field_mutable_list:keepaway.StepIn.state)
  return &state_;
}

// required bool episode_end = 3;
inline bool StepIn::has_episode_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StepIn::set_has_episode_end() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StepIn::clear_has_episode_end() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StepIn::clear_episode_end() {
  episode_end_ = false;
  clear_has_episode_end();
}
inline bool StepIn::episode_end() const {
  // @@protoc_insertion_point(field_get:keepaway.StepIn.episode_end)
  return episode_end_;
}
inline void StepIn::set_episode_end(bool value) {
  set_has_episode_end();
  episode_end_ = value;
  // @@protoc_insertion_point(field_set:keepaway.StepIn.episode_end)
}

// required int32 player_pid = 4;
inline bool StepIn::has_player_pid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void StepIn::set_has_player_pid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void StepIn::clear_has_player_pid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void StepIn::clear_player_pid() {
  player_pid_ = 0;
  clear_has_player_pid();
}
inline ::google::protobuf::int32 StepIn::player_pid() const {
  // @@protoc_insertion_point(field_get:keepaway.StepIn.player_pid)
  return player_pid_;
}
inline void StepIn::set_player_pid(::google::protobuf::int32 value) {
  set_has_player_pid();
  player_pid_ = value;
  // @@protoc_insertion_point(field_set:keepaway.StepIn.player_pid)
}

// required double current_time = 5;
inline bool StepIn::has_current_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void StepIn::set_has_current_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void StepIn::clear_has_current_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void StepIn::clear_current_time() {
  current_time_ = 0;
  clear_has_current_time();
}
inline double StepIn::current_time() const {
  // @@protoc_insertion_point(field_get:keepaway.StepIn.current_time)
  return current_time_;
}
inline void StepIn::set_current_time(double value) {
  set_has_current_time();
  current_time_ = value;
  // @@protoc_insertion_point(field_set:keepaway.StepIn.current_time)
}

// -------------------------------------------------------------------

// StepOut

// required int32 action = 1;
inline bool StepOut::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StepOut::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StepOut::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StepOut::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 StepOut::action() const {
  // @@protoc_insertion_point(field_get:keepaway.StepOut.action)
  return action_;
}
inline void StepOut::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:keepaway.StepOut.action)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace keepaway

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_keepaway_2eproto__INCLUDED
